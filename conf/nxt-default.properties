############################################################
# Do not modify this file.  Instead, create a              #
# nxt.properties file and make your changes there.         #
# They will overwrite the defaults!                        #
############################################################

#### PEER NETWORKING ####

# Announce my IP address/hostname to peers and allow them to share it with other peers.
# If disabled, peer networking servlet will not be started at all.
nxt.shareMyAddress=true

# Port for incoming peer to peer networking requests, if enabled.
nxt.peerServerPort=8123

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all IPv4 interfaces or :: to listen on all IPv4 and IPv6 interfaces
nxt.peerServerHost=0.0.0.0

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to peers,
# and may be different from nxt.peerServerPort (useful if you do port forwarding behind a router).
nxt.myAddress=

# My platform, to be announced to peers.
nxt.myPlatform=PC

# My hallmark, if available.
nxt.myHallmark=

# A list of well known peer addresses / host names, separated by '; '.
# If not set, a random selection of nxtcrypto.org and nxtbase.com nodes is used.
nxt.wellKnownPeers=83.248.159.14; 73.114.181.127; 178.248.85.73; 18.116.7.200; 62.224.101.157; 45.58.62.236; 91.237.220.80; 128.171.159.20; 144.76.36.175; 152.171.205.21; 38.114.101.87; 38.114.101.85; 151.80.7.117; 52.183.117.14; 158.69.53.36; 176.9.25.254; 62.75.188.216; 51.15.61.5; 37.97.40.203; 76.121.196.154; 176.36.154.195; 98.180.70.128; 70.180.246.148; 37.205.11.73; 88.99.253.48; 45.76.137.110; 192.99.47.76; 108.170.165.7; 66.227.173.68; 77.248.231.139; 66.79.160.82; 99.6.109.188; 185.142.239.174; 160.36.130.180; 75.158.125.140; 173.179.191.134; 91.121.159.44; 195.154.221.179; 78.94.155.7; 13.91.3.135; 70.95.197.163; 88.99.249.245; 32.214.111.228; 73.7.101.44; 75.138.126.52; 104.128.234.137; 92.43.104.34; 52.168.160.112; 178.63.87.215; 212.175.18.122; 195.230.182.182; 71.166.55.129; 73.65.209.233; 91.143.92.133; 86.124.109.88; 109.75.215.82; 178.233.220.206; 73.24.234.9; 184.64.125.248; 136.61.91.236; 45.77.40.201; 60.253.48.31; 176.24.198.205; 192.80.146.138; 205.209.140.10; 71.198.137.230; 163.172.122.206; 67.11.172.218; 90.126.118.203; 92.206.64.168; 77.117.238.1; 204.45.61.2; 212.98.92.236; 172.93.55.119; 85.86.149.179; 184.161.232.180; 80.241.208.128; 217.168.219.34; 87.98.244.116; 162.243.144.202; 5.9.50.158; 95.165.132.145; 83.194.127.195; 111.90.145.100; 217.66.97.39; 218.38.28.183; 203.158.118.10; 195.46.187.142; 217.66.97.34; 151.80.42.137; 202.28.194.82; 92.54.230.57; 104.28.26.204; 117.3.66.107; 84.30.185.133; 92.109.126.47; 54.71.247.96; 88.99.166.52; 213.32.102.140; 60.234.70.213; 198.27.68.159; 195.154.179.175; 62.75.187.160; 91.189.160.214; 91.121.133.32; 112.161.241.249; 160.16.52.180; 136.243.54.19; 217.66.97.41; 62.210.202.41; 51.140.69.7; 185.7.210.4; 103.251.107.78; 107.150.32.114; 34.225.2.76; 98.223.117.112; 77.99.233.40; 82.135.154.9; 109.190.100.208; 82.166.125.233; 213.136.69.222; 81.94.202.156; 145.239.75.142; 81.83.5.50; 83.169.21.27; 213.239.255.154; 109.247.136.146; 203.4.172.254; 217.173.23.149; 83.248.247.7; 38.142.82.141; 123.56.90.147; 202.5.195.252; 93.123.73.133; 5.103.138.90; 77.120.101.180; 216.165.179.49; 104.27.182.25; 162.248.4.26; 138.19.225.187; 85.10.211.130; 78.240.13.44; 85.195.246.182; 192.161.209.104; 93.88.74.26; 185.144.131.131; 79.221.202.15; 112.167.81.44; 126.28.183.62; 86.19.102.12; 217.40.89.129; 174.36.0.110; 128.171.53.34; 130.236.232.24; 173.238.248.170; 206.51.141.186; 173.192.160.206; 84.113.16.79; 158.69.150.192; 46.4.126.236; 108.238.244.144; 80.241.221.231; 112.161.84.93; 80.122.157.25; 91.218.101.41; 58.33.76.227; 158.69.150.193; 216.189.154.77; 5.9.106.250; 148.251.218.140; 174.36.0.107; 185.157.21.85; 31.24.224.11; 80.229.26.5; 93.202.207.114; 198.100.144.47; 89.245.44.69; 212.47.254.31; 69.165.74.83; 95.43.237.193; 31.18.115.123; 178.63.13.220; 

# These peers will always be sent rebroadcast transactions. They are also automatically added to wellKnownPeers, so no need for duplicates.
burst.rebroadcastPeers=a.storj.eu; 158.69.150.192

# Connect to this many well known peers before using the peer database to get connected faster.
# Set to 0 or comment out to disable.
burst.connectWellKnownFirst=10

# Known bad peers to be blacklisted
nxt.knownBlacklistedPeers=

# Peers used for testnet only.
nxt.testnetPeers=

# Maintain active connections with at least that many peers.
nxt.maxNumberOfConnectedPublicPeers=20

# Peer networking connect timeout for outgoing connections.
nxt.connectTimeout=4000

# Peer networking read timeout for outgoing connections.
nxt.readTimeout=8000

# Peer networking server idle timeout, milliseconds.
nxt.peerServerIdleTimeout=30000

# Use WebSocket connection if supported by the remote peer
nxt.useWebSockets=true

# WebSocket connection idle timeout (milliseconds)
nxt.webSocketIdleTimeout=900000

# Use the peer hallmark to only connect with peers above the defined push/pull hallmark thresholds.
nxt.enableHallmarkProtection=false

# Hallmark threshold to use when sending data to peers.
nxt.pushThreshold=0

# Hallmark threshold to use when requesting data from peers.
nxt.pullThreshold=0

# Blacklist peers for 600000 milliseconds (i.e. 10 minutes by default).
nxt.blacklistingPeriod=600000

# Consider a new transaction or block sent after 10 peers have received it.
nxt.sendToPeersLimit=10

# Enable the Jetty Denial of Service Filter for the peer networking server.
nxt.enablePeerServerDoSFilter=true

# Compress Http responses for the peer networking server.
nxt.enablePeerServerGZIPFilter=true

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 6874 (peer networking), 6875 (UI) and 6876 (API) will be used.
nxt.isTestnet=false

# Save known peers in the database
nxt.savePeers=true

# Set to false to disable use of the peers database. This will not delete saved peers.
nxt.usePeersDb=true

# Set to false to disable getting more peers from the currently connected peers. Only useful
# when debugging and want to limit the peers to those in peersDb or wellKnownPeers.
nxt.getMorePeers=true

# Set to true to run offline - do not connect to peers and do not listen for incoming peer
# connections. This is equivalent to setting nxt.shareMyAddress=false, nxt.wellKnownPeers=,
# nxt.testnetPeers= and nxt.usePeersDb=false, and if set to true overrides those properties.
nxt.isOffline=false

# Enable re-broadcasting of new transactions until they are received back from at least one
# peer, or found in the blockchain. This feature can optionally be disabled, to avoid the
# risk of revealing that this node is the submitter of such re-broadcasted new transactions.
nxt.enableTransactionRebroadcasting=true

# Do not allow the number of unconfirmed transactions in memory to exceed this value.
# If exceeded, the fee/size ratio of the transactions in a forged block is used to
# decide which to keep in the unconfirmed pool. Set to 0 or negative for no limit.
nxt.maxUnconfirmedTransactions=400

# Transactions that aren't confirmed for this many blocks start getting rebroadcast.
burst.rebroadcastAfter=5

# Transactions being rebroadcast get rebroadcast every this many blocks until they are confirmed.
burst.rebroadcastEvery=4

#### API SERVER ####

# Accept http/json API requests.
nxt.enableAPIServer=true

# Hosts from which to allow http/json API requests, if enabled.
nxt.allowedBotHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for http/json API requests.
nxt.apiServerPort=8125

# Host interface on which to listen for http/json API request, default localhost only.
# Set to 0.0.0.0 to allow the API server to accept requests from all network interfaces.
nxt.apiServerHost=127.0.0.1

# Idle timeout for http/json API request connections, milliseconds.
nxt.apiServerIdleTimeout=30000

# Directory with html and javascript files for the new client UI, and admin tools utilizing
# the http/json API.
nxt.apiResourceBase=html/ui

# Java API documentation directory, optional.
nxt.javadocResourceBase=html/doc

# Enable Cross Origin Filter for the API server.
nxt.apiServerCORS=false

# Enable SSL for the API server (also need to set nxt.keyStorePath and nxt.keyStorePassword).
nxt.apiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nxt.apiServerEnforcePOST=true

# Compress Http responses for the API server.
nxt.enableAPIServerGZIPFilter=false


#### OLD NRS USER INTERFACE ####

# Enable the deprecated NRS user interface.
nxt.enableUIServer=false

# Hosts from which to allow NRS user interface requests, if enabled.
nxt.allowedUserHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for NRS user interface server.
nxt.uiServerPort=7875

# Host interface for NRS user interface server, default localhost only.
# Set to 0.0.0.0 to allow the UI to be accessed on all network interfaces.
nxt.uiServerHost=127.0.0.1

# Idle timeout for NRS user interface server, milliseconds.
nxt.uiServerIdleTimeout=30000

# Directory with html and javascript files for the NRS client user interface.
nxt.uiResourceBase=html/nrs

# Enable Cross Origin Filter for NRS user interface server.
nxt.uiServerCORS=false

# Enable SSL for the NRS user interface (also need to set nxt.keyStorePath and nxt.keyStorePassword).
nxt.uiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nxt.uiServerEnforcePOST=true



#### DEBUGGING ####

# Log file, will be overwritten at every restart.
#nxt.log=nxt.log
# The log file is now specified in logging.properties.

# Enable debug log output.
#nxt.debug=false
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
nxt.enableLogTraceback=false

# Enable logging of exception stack traces.
nxt.enableStackTraces=true

# Enable logging of Jetty messages.
#nxt.debugJetty=false
# Jetty logging is now specified in logging properties.

# Used for debugging peer to peer communications.
nxt.communicationLoggingMask=0

# Track balances of the following accounts and related events for debugging purposes.
nxt.debugTraceAccounts=

# File name for logging tracked account balances.
nxt.debugTraceLog=nxt-trace.csv

# Separator character for trace log.
nxt.debugTraceSeparator=\t

# Quote character for trace log.
nxt.debugTraceQuote="

# Log changes to unconfirmed balances.
nxt.debugLogUnconfirmed=false


#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The nxt_db folder is expected to be in the current working directory, will be created if missing.
nxt.dbUrl=jdbc:h2:./burst_db/burst;DB_CLOSE_ON_EXIT=FALSE

# Database connection JDBC url to use with the test network, if isTestnet=true
nxt.testDbUrl=jdbc:h2:./burst_test_db/burst;DB_CLOSE_ON_EXIT=FALSE

# Database connection timeout in seconds.
nxt.dbLoginTimeout=70

# Database default lock timeout in seconds.
nxt.dbDefaultLockTimeout=60

# Maximum simultaneous database connections.
nxt.maxDbConnections=30

# The memory allocated to database cache, in kB.
# If set to 0, defaults to 50 % of the memory available to the JVM.
nxt.dbCacheKB=0



#### JETTY ####

# Settings for the Jetty Denial Of Service Filter, used for the peer networking server only.
nxt.peerServerDoSFilter.maxRequestsPerSec=30
nxt.peerServerDoSFilter.delayMs=1000
nxt.peerServerDoSFilter.maxRequestMs=300000

# keystore file and password, required if uiSSL or apiSSL are enabled.
nxt.keyStorePath=keystore
nxt.keyStorePassword=password



#### Developers only ####

# Force re-validation of blocks and transaction at start.
nxt.forceValidate=false

# Force re-build of derived objects tables at start.
nxt.forceScan=false

# Print a list of peers having this version on exit.
nxt.dumpPeersVersion=

# Enable trimming of derived objects tables.
nxt.trimDerivedTables=true

# If trimming enabled, maintain enough previous height records to allow rollback of at least
# that many blocks. Must be at least 1440 to allow normal fork resolution. After increasing
# this value, a full re-scan needs to be done in order for previously trimmed records to be
# re-created and preserved.
nxt.maxRollback=1440

# Enable API requests used for blockchain and database manipulation.
nxt.enableDebugAPI=false

# Debug option for Testnet: Winning with every Deadline
burst.mockMining = false

# GPU Blocksync Acceleration / experimental !
burst.oclAuto=true
burst.oclVerify=false

# If 'burst.oclAuto=false' gpu must be specified
burst.oclPlatform=0
burst.oclDevice=0
burst.oclMemPercent=50
burst.oclHashesPerEnqueue=1000